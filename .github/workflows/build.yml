name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        config:
          - { cc: "Visual Studio 2019", cxx: "Visual Studio 2019" }
          - { cc: "Visual Studio 2022", cxx: "Visual Studio 2022" }
    steps:
      - uses: actions/checkout@v4

      - name: Set up Visual Studio
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"

      - name: Build with MSBuild
        run: |
          msbuild /p:Configuration=Release /m

      - name: Test with MSBuild
        run: |
          msbuild /p:Configuration=Release /m /t:Test

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: mpv-windows
          path: ./build  # Adjust this path if needed

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        config:
          - { cc: "clang", cxx: "clang++" }
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install meson ninja

      - name: Build with meson
        id: build
        run: |
          meson setup build
          meson compile -C build

      - name: Run tests
        id: test
        run: |
          meson test -C build

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: mpv-macos
          path: ./build  # Adjust this path if needed

  linux:
    runs-on: ubuntu-latest
    container:
      image: "registry.opensuse.org/home/mia/images/images/mpv-ci:stable-deps"
      env:
        CC: "${{ matrix.config.cc }}"
        CXX: "${{ matrix.config.cxx }}"
        ASAN_OPTIONS: "halt_on_error=1:abort_on_error=1:print_summary=1:detect_leaks=0"
    strategy:
      matrix:
        config:
          - { cc: "gcc", cxx: "g++" }
          - { cc: "clang", cxx: "clang++" }
    steps:
      - uses: actions/checkout@v4

      - name: Build with meson
        id: build
        run: |
          ./ci/build-tumbleweed.sh

      - name: Print meson log
        if: ${{ failure() && steps.build.outcome == 'failure' }}
        run: |
          cat ./build/meson-logs/meson-log.txt

      - name: Run meson tests
        id: tests
        run: |
          meson test -C build

      - name: Print meson test log
        if: ${{ failure() && steps.tests.outcome == 'failure' }}
        run: |
          cat ./build/meson-logs/testlog.txt

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: mpv-linux-${{ matrix.config.cc }}
          path: ./build  # Adjust this path if needed
